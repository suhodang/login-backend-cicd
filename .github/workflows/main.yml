name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: login_sign_up
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "✅ PostgreSQL is ready!"
              exit 0
            fi
            echo "⏳ Waiting for PostgreSQL..."
            sleep 2
          done
          echo "❌ PostgreSQL failed to start"
          exit 1

      - name: Initialize Database Schema
        run: |
          PGPASSWORD="" psql -h localhost -U postgres -d login_sign_up -c "
          CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            username VARCHAR(50) NOT NULL,
            email VARCHAR(100) UNIQUE NOT NULL,
            password_hash TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );"

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres@localhost:5432/login_sign_up
          JWT_SECRET: ${{ secrets.JWT_SECRET }}  # ✅ Node.js 환경에서 JWT_SECRET 설정
        run: yarn test